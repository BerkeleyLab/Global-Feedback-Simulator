#ifndef FILTER_H
#define FILTER_H
#include "complex.h"


//#define FILTER_ORDER_MAX 10
typedef struct str_filter {
  int alloc_order;
  int alloc_coeffs;
  int n_coeffs;
  int order;
  int *modes;
  int *coeff_start;
  double complex * coeffs;
  double complex * poles;
} Filter;


typedef struct str_filter_state {
  double complex * state; // of length n_coeffs
  double complex * input; // of length order
} Filter_State;

Filter * Filter_Allocate_New(int alloc_order, int alloc_coeffs);
void Filter_Allocate_In(Filter * fil, int alloc_order, int alloc_coeffs);

void Filter_Append_Modes(Filter * fil, double complex * poles,int ord,double dt);


void Filter_State_Allocate(Filter_State * sf, Filter * fil);

double complex Filter_Step(Filter * fil, double complex innow,
			   Filter_State * filnow, Filter_State * filpast);

#endif
